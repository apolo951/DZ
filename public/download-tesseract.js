// Script pour t√©l√©charger automatiquement les fichiers Tesseract.js
// Utilis√© comme fallback si les fichiers locaux ne sont pas disponibles

async function downloadTesseractFiles() {
  console.log('üì• T√©l√©chargement des fichiers Tesseract.js...');
  
  try {
    // Chemins strictement locaux pour Tesseract.js (outil hors-ligne)
    const files = [
      { name: 'worker.min.js', url: '/tesseract-worker.js' },
      { name: 'tesseract-core-simd.wasm.js', url: '/tesseract-core.wasm.js' }
    ];
    
    // Cr√©er les workers en m√©moire
    const workers = {};
    
    for (const file of files) {
      try {
        const response = await fetch(file.url);
        if (response.ok) {
          const content = await response.text();
          const blob = new Blob([content], { type: 'application/javascript' });
          workers[file.name] = URL.createObjectURL(blob);
          console.log(`‚úÖ ${file.name} t√©l√©charg√© avec succ√®s`);
        }
      } catch (error) {
        console.warn(`‚ö†Ô∏è Impossible de t√©l√©charger ${file.name}:`, error);
      }
    }
    
    // Exposer les URLs g√©n√©r√©es globalement
    window.tesseractWorkers = workers;
    console.log('‚úÖ Fichiers Tesseract.js pr√™ts');
    
  } catch (error) {
    console.error('‚ùå Erreur lors du t√©l√©chargement des fichiers Tesseract:', error);
  }
}

// Auto-d√©marrage
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', downloadTesseractFiles);
} else {
  downloadTesseractFiles();
}